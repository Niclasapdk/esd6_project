close all
clear
clc

data = readtable('scope_8_05s.csv');
%data_noise = readtable('scope_6_noisefloor_w_reverb.csv');

ch1_dB = 20 * log10(abs(data.ch1) + eps);
ch2_dB = 20 * log10(abs(data.ch2) + eps); % Avoid log(0)
%noise_dB = 20 * log10(abs(data_noise.ch2) + eps);

MaxVAL=max(ch2_dB);

x_min = 0;
x_max = 0.9;

% Logical index for x range
idx = data.xaxis >= x_min & data.xaxis <= x_max;

figure;
plot(data.xaxis,ch2_dB, 'LineWidth',1);
hold on;
plot(data.xaxis(idx),ch1_dB(idx),':');
%hold on;
%plot(data.xaxis,noise_dB,'-','LineWidth',3);
title('scope');
xlim([0.5 1.5]);
ylim([-40 5]);

xline(0.817,'--','LineWidth',2,'color','r', 'White Noise Stops', 'LabelVerticalAlignment', 'middle', 'HandleVisibility',);
xline(0.945,'--','LineWidth',2,'color','r');
yline(MaxVAL-5,'--','LineWidth',2,'color','black');
yline(MaxVAL-30,'--','LineWidth',2,'color','black');

% Convert input and output to dB
% ch1_dB = 20 * log10(abs(data.ch1) + eps);
% ch2_dB = 20 * log10(abs(data.ch2) + eps); % Avoid log(0)
% 
% 
% plot(data.xaxis,ch2_dB,data.xaxis,ch1_dB)


%analog
% ch1_dB = 20 * log10(abs(data.Channel1_V_) + eps);
% ch2_dB = 20 * log10(abs(data.Channel2_V_) + eps); % Avoid log(0)
% MaxVAL=max(ch2_dB)
% 
% 
% plot(data.Time_s_,ch2_dB,data.Time_s_,ch1_dB)
% yline(MaxVAL-5);
% yline(MaxVAL-65);



% TF2 = islocalmin(data.Channel1_V_,'MinProminence',0.1);

% figH = figure;
% time = round(data.Time_s_(TF2),5);
% time_diff = time(2:end,1) - time(1,1);
% strings = "$\Delta$"+string(time*1E3)+"ms";
% time_strings = ["Input Impulse";"Output Response";"$\Delta$"+string(time_diff*1E3)+'ms';];
% p = plot(data.Time_s_,data.Channel2_V_,data.Time_s_,data.Channel1_V_);
% p(1).Color = [114/255, 135/255, 253/255];
% xH = xline(time,'r--');
% hold on

% for k = 2:length(time)
%      ypart = 0.075*k*ones(length(time),2);  
%      meow(k) = line([time(1) time(k)],ypart(k,:));
% end
% 
% lgd = legend([p(:);meow(2:end).'],time_strings(:),'Interpreter','latex','Location','southoutside','Orientation','horizontal','NumColumns',4);
% lgd.FontSize = 10;
% xlim([-0.02 0.1]);
% title('Early Delay Impulse Reponse');
% xlabel('Time [s]');
% ylabel('Magnitude [V]');
% grid on;

% saveFolder = fullfile(pwd,'..','..','..','gitfigures/system_design/reverb/');
% filePath = fullfile(saveFolder, sprintf('%s.png','reverb_early_delay_test'));
% exportgraphics(figH(1), filePath, 'Resolution', 300);